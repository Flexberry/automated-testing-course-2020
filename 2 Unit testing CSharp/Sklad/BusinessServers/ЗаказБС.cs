//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IIS.Sklad
{
    using ICSSoft.STORMNET;
    using System;
    using System.Xml;


    // *** Start programmer edit section *** (Using statements)
    using System.Linq;
    using ICSSoft.Services;
    using Unity;
    using ICSSoft.STORMNET.Business;
    using ICSSoft.STORMNET.FunctionalLanguage;
    using ICSSoft.STORMNET.Business.LINQProvider;
    using System.Collections.Generic;

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// ЗаказБС.
    /// </summary>
    // *** Start programmer edit section *** (ЗаказБС CustomAttributes)

    // *** End programmer edit section *** (ЗаказБС CustomAttributes)
    [ICSSoft.STORMNET.AccessType(ICSSoft.STORMNET.AccessType.none)]
    public class ЗаказБС : ICSSoft.STORMNET.Business.BusinessServer
    {

        // *** Start programmer edit section *** (ЗаказБС CustomMembers)
        private ITaxService _taxService;

        public ITaxService TaxService
        {
            get
            {
                return _taxService ?? UnityFactory.GetContainer().Resolve<ITaxService>();
            }
            set
            {
                _taxService = value;
            }
        }

        private IDiscountService _discountService;

        public IDiscountService DiscountService
        {
            get
            {
                return _discountService ?? UnityFactory.GetContainer().Resolve<IDiscountService>();
            }
            set
            {
                _discountService = value;
            }
        }


        private IWarehouseService _warehouseService;

        public IWarehouseService WarehouseService
        {
            get
            {
                return _warehouseService ?? new WarehouseService(DataService);
            }
            set
            {
                _warehouseService = value;
            }
        }
        // *** End programmer edit section *** (ЗаказБС CustomMembers)


        // *** Start programmer edit section *** (OnUpdateСтрокаЗаказа CustomAttributes)

        // *** End programmer edit section *** (OnUpdateСтрокаЗаказа CustomAttributes)
        public virtual ICSSoft.STORMNET.DataObject[] OnUpdateСтрокаЗаказа(IIS.Sklad.СтрокаЗаказа UpdatedObject)
        {
            // *** Start programmer edit section *** (OnUpdateСтрокаЗаказа)
            List<DataObject> toUpdate = new List<DataObject>();

            if (UpdatedObject.GetStatus() == ObjectStatus.Created)
            {
                #region v1

                UpdatedObject.ЦенаСНалогами = 1.2m * UpdatedObject.Товар.Цена;
                UpdatedObject.Сумма = UpdatedObject.ЦенаСНалогами * UpdatedObject.Количество;

                #endregion

                #region v2
                UpdatedObject.ЦенаСНалогами = TaxService.GetTax(UpdatedObject.Заказ.Регион.Код, UpdatedObject.Товар.КодКатегории) * UpdatedObject.Товар.Цена;
                UpdatedObject.Сумма = UpdatedObject.ЦенаСНалогами
                    * UpdatedObject.Количество
                    * DiscountService.GetDiscount(UpdatedObject);
                #endregion


                #region v1
                //LoadingCustomizationStruct lcs = LoadingCustomizationStruct.GetSimpleStruct(typeof(ТоварНаСкладе), ТоварНаСкладе.Views.ТоварНаСкладеD);
                //lcs.LimitFunction = FunctionBuilder.BuildEquals<ТоварНаСкладе>(x => x.Товар, UpdatedObject.Товар);
                //var storeProducts = DataService.LoadObjects(lcs).Cast<ТоварНаСкладе>();

                //// ((SQLDataService)DataService).Query<ТоварНаСкладе>(ТоварНаСкладе.Views.ТоварНаСкладеD).Where(x => x.Товар == UpdatedObject.Товар).ToList();

                //if (storeProducts.Sum(x => x.Количество) < UpdatedObject.Количество)
                //{
                //    throw new Exception("Недостаточно товара на складах.");
                //}

                #endregion

                #region v2
                if (!WarehouseService.CanReserveProduct(UpdatedObject.Товар, UpdatedObject.Количество))
                {
                    throw new Exception("Недостаточно товара на складах.");
                }

                toUpdate.AddRange(WarehouseService.ReserveProduct(UpdatedObject.Товар, UpdatedObject.Количество));
                #endregion
            }

            return toUpdate.ToArray();
            // *** End programmer edit section *** (OnUpdateСтрокаЗаказа)
        }

        // *** Start programmer edit section *** (OnUpdateЗаказ CustomAttributes)

        // *** End programmer edit section *** (OnUpdateЗаказ CustomAttributes)
        public virtual ICSSoft.STORMNET.DataObject[] OnUpdateЗаказ(IIS.Sklad.Заказ UpdatedObject)
        {
            // *** Start programmer edit section *** (OnUpdateЗаказ)
            if (UpdatedObject.GetStatus() == ObjectStatus.Created)
            {
                UpdatedObject.Цена = UpdatedObject.СтрокаЗаказа.Cast<СтрокаЗаказа>().Sum(x => x.Сумма);
            }

            return new ICSSoft.STORMNET.DataObject[0];
            // *** End programmer edit section *** (OnUpdateЗаказ)
        }
    }
}
